# cygwin only
if [ $OSTYPE == 'cygwin' ]; then
    alias ls='ls --color --show-control-chars'
    alias dir='dir -N --color'
    cr() {
        cmd /c start $@
    }
    exp() {
        if [ $# -lt 1 ]; then
            echo "Please follow a path to explore."
        else
            cr `cygpath -w $1`
        fi
    }
    gdiff() {
        if [ $# -lt 2 ]; then
            echo "Usage: gdiff <FILE1> <FILE2>."
        else
            /d/tools/DiffMerge_3_3_0_18513/DiffMerge.exe `cygpath.exe -w $1` `cygpath.exe -w $2`
        fi
    }
    qt() {
        amake=`alias make 2>/dev/nul`;
        if [ -z "$amake" ]; then
            export PATH=/c/Qt/2010.05/mingw/bin/:/c/Qt/2010.05/qt/bin/:$PATH
            alias make='mingw32-make.exe'
        else
            export PATH=${PATH##/c/Qt/2010.05/mingw/bin/:/c/Qt/2010.05/qt/bin/:}
        unalias make
        fi
    }
    if [ $SSH_TTY ] && [ ! $WINDOW ]; then
        screen -D -U -R brook
    fi
    # Mac OS only
elif [[ $OSTYPE =~ 'darwin' ]]; then
    alias ls='ls -G'
    export PATH=/usr/local/git/bin/:/Applications/MacVim-7_3-53/:$PATH
    alias mysql='/usr/local/mysql-5.5.19-osx10.6-x86/bin/mysql'
    export PS1="\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] "
fi
export PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}\007"'

alias ll='ls -l'
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
export HISTCONTROL=ignoredups
# export LANG="zh_CN.GBK"
# export http_proxy=http://proxy.b.com:8080

calc() {
# perl -le "print 42.5/1.7"
    if [ $# -lt 1 ]; then
        echo "Please follow an expression, such as (42.5/1.7)*6."
    else
        perl -le "use Math::Calculus::Expression;my \$exp = Math::Calculus::Expression->new;\$exp->setExpression('$1');print \$exp->evaluate();"
    fi
}
range() {
    if [ $# -lt 2 ]; then
        echo "Please follow an low limit and an up limit."
    else
        i=$1;while [ $i -le $2 ];do  echo $i && i=$((i+1)); done
    fi
}
p4opened() {
    for i in `p4 clients -u $1|sed "s/^Client \([^ ]*\) .*/\1/"`; do p4 opened -C $i; done
}
words() {
    if [ $# -lt 1 ]; then
        echo "Please follow the name of an text file."
    else
        for i in `grep -o "\b[A-z][A-z][A-z]\+\b" "$1" |sed 's/.*/\L&/g'|sort|awk '{if ($0!=line) print;line=$0}'`;do n=`grep -io "\b$i\b" "$1" |wc -l` && echo "$n,$i"; done|sort
    fi
}
h2d () {
    echo "obase=10;ibase=16;$@"|perl -pe 's/=16;(\w+)/=16;\U$1/g'|bc
}

d2h () {
    echo "obase=16;ibase=10;$@"|bc
}

d2b () {
    echo "obase=2;ibase=10;$@"|bc
}

b2h () {
    echo "obase=16;ibase=2;$@"|bc
}

b2d () {
    echo "obase=10;ibase=2;$@"|bc
}

h2c() {
    echo "0: $@ 0a"|xxd.exe -r
}
listtextfiles() {
    if [ $# -ne 1 ]; then
        echo "Please follow a path to list."
    else
        find $1 -type f -exec file {} \;|grep ":.*text"|cut -d ":" -f1
    fi
}
listbinaryfiles() {
    if [ $# -ne 1 ]; then
        echo "Please follow a path to list."
    else
        find $1 -type f -exec file {} \;|grep -v ":.*text"|cut -d ":" -f1
    fi
}
funiq() {
    perl /works/scriptbundle/unique.pl $@
}

set -o vi
# if [ $TERM != "screen-256color" ] && [  $TERM != "screen" ]; then
#    tmux -L brook attach || tmux -L brook; exit
# fi
#
# serverList=(
# "mydev:10.162.181.149:zhong:~:~/.ssh/id_rsa"
# "vmdev:192.168.1.101:root:/works:~/.ssh/id_rsa"
# )

for server in "${serverList[@]}" ; do
    serverInfo=(${server//:/ })
    ssh_util_functions="$ssh_util_functions
    ${serverInfo[0]}() {
        ssh -i ${serverInfo[4]} ${serverInfo[2]}@${serverInfo[1]}
    }
    ${serverInfo[0]}get() {
        if [ \$# -lt 2 ]; then
            echo \"Usage: ${serverInfo[0]}get <remote_file> <local_file>.\"
        else
            scp -i ${serverInfo[4]} ${serverInfo[2]}@${serverInfo[1]}:${serverInfo[3]}/\$1 \$2
        fi
    }
    ${serverInfo[0]}put() {
        if [ \$# -lt 2 ]; then
            echo \"Usage: ${serverInfo[0]}put <local_file> <remote_file>.\"
        else
            scp -i ${serverInfo[4]} \$1 ${serverInfo[2]}@${serverInfo[1]}:${serverInfo[3]}/\$2
        fi
    }
    ${serverInfo[0]}sync() {
        if [ \$# -lt 2 ]; then
            echo \"Usage: ${serverInfo[0]}sync <remote_folder> <local_folder>.\"
        else
            echo \"rsync -rv ${serverInfo[2]}@${serverInfo[1]}:${serverInfo[3]}/depot/\$1/ \$2/\"
            rsync -rv ${serverInfo[2]}@${serverInfo[1]}:${serverInfo[3]}/depot/\$1/ \$2/
        fi
    }"
done

eval "$ssh_util_functions"
