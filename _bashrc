# cygwin only
if [ $OSTYPE == 'cygwin' ]; then
        export PATH=/d/tools/vim:$PATH
        alias ls='ls --color --show-control-chars'
        alias dir='dir -N --color'
        cr() {
            cmd /c start $@
        }
        exp() {
            if [ $# -lt 1 ]; then
                echo "Please follow a path to explore."
            else
                cr `cygpath -w $1`
            fi
        }
        vim() {
            if [ $# -lt 1 ]; then
                echo "Please follow a file name."
            else
                cr gvim -p --remote-tab-silent `cygpath -w $1`
            fi
        }
        gdiff() {
            if [ $# -lt 2 ]; then
                echo "Usage: gdiff <FILE1> <FILE2>."
            else
                /d/tools/DiffMerge_3_3_0_18513/DiffMerge.exe `cygpath.exe -w $1` `cygpath.exe -w $2`
            fi
        }
        qt() {
            amake=`alias make 2>/dev/nul`;
            if [ -z "$amake" ]; then
                export PATH=/c/Qt/2010.05/mingw/bin/:/c/Qt/2010.05/qt/bin/:$PATH
                alias make='mingw32-make.exe'
            else
                export PATH=${PATH##/c/Qt/2010.05/mingw/bin/:/c/Qt/2010.05/qt/bin/:}
            unalias make
            fi
        }
    # Mac OS only
elif [ $OSTYPE == 'darwin10.0' ]; then
    alias ls='ls -G'
    export PATH=/usr/local/git/bin/:/Applications/MacVim-7_3-53/:$PATH
    alias vim='mvim --remote-tab-silent'
    alias mysql='/usr/local/mysql-5.5.19-osx10.6-x86/bin/mysql'
    export PS1="\[\033]0;\u@\h: \w\007\][\u@\h \W]\$ "
fi

alias ll='ls -l'
export HISTCONTROL=ignoredups
# alias vim='vim -o'
# export LANG="zh_CN.GBK"
# export http_proxy=http://proxy.b.com:8080

calc() {
# perl -le "print 42.5/1.7"
    if [ $# -lt 1 ]; then
        echo "Please follow an expression, such as (42.5/1.7)*6."
    else
        perl -le "use Math::Calculus::Expression;my \$exp = Math::Calculus::Expression->new;\$exp->setExpression('$1');print \$exp->evaluate();"
    fi
}
range() {
    if [ $# -lt 2 ]; then
        echo "Please follow an low limit and an up limit."
    else
        i=$1;while [ $i -le $2 ];do  echo $i && i=$((i+1)); done
    fi
}
p4opened() {
    for i in `p4 clients -u $1|sed "s/^Client \([^ ]*\) .*/\1/"`; do p4 opened -C $i; done
}
words() {
    if [ $# -lt 1 ]; then
        echo "Please follow the name of an text file."
    else
        for i in `grep -o "\b[A-z][A-z][A-z]\+\b" "$1" |sed 's/.*/\L&/g'|sort|awk '{if ($0!=line) print;line=$0}'`;do n=`grep -io "\b$i\b" "$1" |wc -l` && echo "$n,$i"; done|sort
    fi
}
h2d () {
    echo "obase=10;ibase=16;$@"|perl -pe 's/=16;(\w+)/=16;\U$1/g'|bc
}

d2h () {
    echo "obase=16;ibase=10;$@"|bc
}

d2b () {
    echo "obase=2;ibase=10;$@"|bc
}

b2h () {
    echo "obase=16;ibase=2;$@"|bc
} 

b2d () {
    echo "obase=10;ibase=2;$@"|bc
} 

h2c() {
    echo "0: $@ 0a"|xxd.exe -r 
}
vin() {
    if [ $# -ne 1 ]; then
        vim $@
    else
        if [ ${1#*:} != ${1%:*} ]; then
            vim +${1#*:} ${1%:*}
        else
            vim $1
        fi
    fi
}
listtextfiles() {
    if [ $# -ne 1 ]; then
        echo "Please follow a path to list."
    else
        find $1 -type f -exec file {} \;|grep ":.*text"|cut -d ":" -f1
    fi
}
listbinaryfiles() {
    if [ $# -ne 1 ]; then
        echo "Please follow a path to list."
    else
        find $1 -type f -exec file {} \;|grep -v ":.*text"|cut -d ":" -f1
    fi
}
